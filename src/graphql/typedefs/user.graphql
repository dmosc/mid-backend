# Types
type User implements Timestamps {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  profileImg: String
  mediator: Mediator
  representative: Representative

  # Interface required
  createdAt: Date!
  updatedAt: Date!
}

type Mediator {
  facilitatorId: String!
  certificateUrl: String!
  biography: String!
}

type Representative {
  role: Role!
  company: Company!
}

type Users {
  info: Info!
  results: [User]!
}

# Inputs
input UserCreate {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  profileImg: String
}

input UserUpdate {
  firstName: String
  lastName: String
  email: String
  profileImg: String
  mediator: MediatorInput
  representative: RepresentativeInput
}

input MediatorInput {
  facilitatorId: String!
  certificateUrl: String!
  biography: String!
}

input RepresentativeInput {
  role: Role!
  company: ID!
}

# Enums
enum Role {
  ADMIN, VIEWER
}